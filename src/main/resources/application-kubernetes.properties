
server.port = 80
app.env=dev
spring.application.name = doxa-oauth
spring.cloud.service-registry.auto-registration.enabled=false
eureka.client.enabled=false
eureka.client.serviceUrl.registerWithEureka=false

# Disable zipkin
spring.zipkin.enabled=false

# disable for local development
spring.cloud.kubernetes.discovery.enabled=true
#spring.cloud.kubernetes.config.name=
default.client_id=${DEFAULT_CLIENT_ID}
default.redirect_uri=${DEFAULT_REDIRECT_URL}

passwordreset.url=${AUTH_HOST}
doxa.portal.uri=${API_URL}

# Jpa
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/oauth
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PWD}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.liquibase.change-log=classpath:/db/liquibase/changelogs/db.changelog-master.xml
spring.liquibase.database-change-log-lock-table=liquibase-lock
spring.liquibase.database-change-log-table=liquibase-changelog
spring.liquibase.default-schema=public
spring.liquibase.drop-first=false
spring.liquibase.enabled=true
spring.liquibase.test-rollback-on-update=false
spring.liquibase.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/oauth
spring.liquibase.user=${DB_USER}
spring.liquibase.password=${DB_PWD}

auth-server.issuer=http://oauth-service
auth-server.access-token.default-format=jwt
auth-server.access-token.lifetime=24h
auth-server.id-token.lifetime=24h
auth-server.refresh-token.lifetime=8h
auth-server.refresh-token.max-lifetime=8h

# Rabbitmq
spring.rabbitmq.addresses=amqps://${RABBIT_MQ_USER}:${RABBIT_MQ_PWD}@${RABBIT_MQ_HOST}:${RABBIT_MQ_PORT}/${VHOST}

# Redis
doxa.redis.host=${REDIS_HOST}
doxa.redis.port=${REDIS_PORT}
doxa.redis.ttl-in-seconds=300

doxa.email.hyperlink-host=${EMAIL_HYPERLINK_HOST}

spring.data.redis.repositories.enabled=false
# Disable rabbitmq health check
management.health.rabbit.enabled=false
#disable redis health check (redis cache is optional)
management.health.redis.enabled=false
